version: "3"

vars:
  PYTHON_CODE_DIRS: src/dmb src/tests #src/auto-correlation
  REPO_ROOT:
    sh: git rev-parse --show-toplevel

  PLATFORM:
    sh: uname -s | tr '[:upper:]' '[:lower:]'

tasks:
  install-uv:
    desc: "Install uv"
    run: once
    silent: true
    vars:
      UV_INSTALLED:
        sh: |
          if [ -x "$(command -v uv)" ]; then
            echo "true"
          else
            echo "false"
          fi
    cmds:
      - |
        if [ "{{.UV_INSTALLED}}" == "false" ]; then
          # for linux and mac
          if [ "{{.PLATFORM}}" == "linux" ] || [ "{{.PLATFORM}}" == "darwin" ]; then
            curl -LsSf https://astral.sh/uv/install.sh | sh
          else
            echo "Unsupported platform {{.PLATFORM}}"
          fi
        fi

  setup:
    desc: "Setup"
    run: once
    deps:
      - task: install-uv
    cmds:
      - uv venv

  install:
    desc:
      Install dependencies. Poetry cannot handle the torch installation properly on
      multiple hardware platforms.
    vars:
      DEVICE: '{{ .DEVICE | default "cpu" }}' # cpu or cu121
    deps:
      - task: setup
    cmds:
      - |
        VIRTUAL_ENV=./.venv
        uv sync
        if [ "{{ .PLATFORM }}" = "Darwin" ]; then
          uv pip install torch==2.4.1 torchvision==0.19.1
        fi
        if [ "{{ .PLATFORM }}" = "Linux" ]; then
          if [ "{{ .DEVICE }}" = "cpu" ];
          then
            uv add torch==2.4.1 torchvision==0.19.1
          else
            uv pip install torch==2.4.1+cu124 torchvision==0.19.1 --index-url https://download.pytorch.org/whl/cu124
          fi
        fi

  format:
    desc: Format the code
    deps:
      - task: setup
    cmds:
      - uv run yapf -i --recursive {{ .PYTHON_CODE_DIRS }}
      - uv run isort {{ .PYTHON_CODE_DIRS }}

  lint:
    desc: Lint the code
    vars:
      YAPF_FILES:
        sh: git ls-files | grep '.py' | tr '\n' ' '
    deps:
      - task: setup
    cmds:
      - uv run isort --check-only {{ .PYTHON_CODE_DIRS }}
      - >
        if [ -n "{{ .FILES }}" ]; then 
          yapf --diff {{ .FILES }}; 
        fi
      - uv run mypy {{ .PYTHON_CODE_DIRS }}
      # - uv run pylint -v {{ .PYTHON_CODE_DIRS }}

  test:
    desc: Run tests
    deps:
      - task: setup
    vars:
      MARK: '{{ .MARK | default "" }}'
    cmds:
      - uv run pytest --pdb -vv -m "{{ .MARK }}" --basetemp={{ .REPO_ROOT }}/.cache/pytest_tmp

  licenses:
    desc: List licenses of dependencies
    cmds:
      - uv run pip-licenses --from=mixed --order=license --summary
