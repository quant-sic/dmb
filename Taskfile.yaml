version: "3"

vars:
  PLATFORM:
    sh: uname -s | tr '[:upper:]' '[:lower:]'

  PYTHON_CODE_DIRS: "src/dmb src/tests"

  REPO_ROOT:
    sh: git rev-parse --show-toplevel

  VENV_DIR_PATH: "{{ .REPO_ROOT }}/.venv"
  UV_CACHE_DIR: "{{ .REPO_ROOT }}/.cache/uv"

tasks:
  install-uv:
    desc: "Install uv."
    run: once
    silent: true
    vars:
      UV_INSTALLED:
        sh: |
          if [ -x "$(command -v uv)" ]; then
            echo "true"
          else
            echo "false"
          fi
    cmds:
      - |
        if [ "{{.UV_INSTALLED}}" == "false" ]; then
          # for linux and mac
          if [ "{{.PLATFORM}}" == "linux" ] || [ "{{.PLATFORM}}" == "darwin" ]; then
            curl -LsSf https://astral.sh/uv/install.sh | sh
          else
            echo "Unsupported platform"
          fi
        fi

  env-setup:
    desc: "Setup the environment."
    env:
      UV_CACHE_DIR: "{{ .UV_CACHE_DIR }}"
      VENV_DIR_PATH: "{{ .VENV_DIR_PATH }}"
    silent: true
    run: once
    deps:
      - task: install-uv
    sources:
      - pyproject.toml
      - .python-version
    generates:
      - "{{ .VENV_DIR_PATH }}/**/*"
    cmds:
      - uv venv {{ .VENV_DIR_PATH }}

  install-dependencies:
    desc: "Install dependencies"
    env:
      UV_CACHE_DIR: "{{ .UV_CACHE_DIR }}"
      VENV_DIR_PATH: "{{ .VENV_DIR_PATH }}"
    deps:
      - task: env-setup
    vars:
      EXTRAS: '{{ .EXTRAS | default "--extra dev --extra ci" }}'
    cmds:
      - uv sync {{ .EXTRAS }}

  format:
    desc: Format the code
    env:
      UV_CACHE_DIR: "{{ .UV_CACHE_DIR }}"
      VENV_DIR_PATH: "{{ .VENV_DIR_PATH }}"
    cmds:
      - uv run yapf -i --recursive {{ .PYTHON_CODE_DIRS }}
      - uv run isort {{ .PYTHON_CODE_DIRS }}

  lint:
    desc: Lint the code
    env:
      UV_CACHE_DIR: "{{ .UV_CACHE_DIR }}"
      VENV_DIR_PATH: "{{ .VENV_DIR_PATH }}"
    cmds:
      - uv run isort --check-only {{ .PYTHON_CODE_DIRS }}
      - uv run ruff check --fix
      - uv run mypy {{ .PYTHON_CODE_DIRS }}
      - uv run pylint -v {{ .PYTHON_CODE_DIRS }}

  test:
    desc: Run tests
    env:
      UV_CACHE_DIR: "{{ .UV_CACHE_DIR }}"
      VENV_DIR_PATH: "{{ .VENV_DIR_PATH }}"
    vars:
      MARK: '{{ .MARK | default "" }}'
    cmds:
      - uv run pytest -v -m "{{ .MARK }}" --basetemp={{ .REPO_ROOT }}/.cache/pytest_tmp

  licenses:
    desc: List licenses of dependencies
    env:
      UV_CACHE_DIR: "{{ .UV_CACHE_DIR }}"
      VENV_DIR_PATH: "{{ .VENV_DIR_PATH }}"
    cmds:
      - uv run pip-licenses --from=mixed --order=license --summary
