# @package _global_

# Test the Lucas dataset with all columns

defaults:
  - override /datamodule: bose_hubbard_2d_pyalps
  - override /model: dmb_lit_model
  - override /callbacks: default
  - override /trainer: default
  - _self_

tags: ["test", "bose_hubbard_2d_pyalps", "resnet"]

seed: 12345

trainer:
  max_epochs: 10000
  gradient_clip_val: 1
  accumulate_grad_batches: 4

exp_name: "setup_test/bose_hubbard_2d_pyalps/cnn/density/msle"

test: True

datamodule:

  batch_size: 1024
  observables: [
    "Density_Distribution"
    ]
  
model:
  model:

    in_channels: 4
    out_channels: 1

    module_list: [
      {
        _target_: dmb.model.models.simple_resnet2d.SeResNet2d,
        in_channels: 4,
        out_channels: 1,
        kernel_sizes: [5,3,3,3,3,3,3,3],
        n_channels: [16,32,64,128,128,256,256,256],
        dropout: 0.1
      },
    ]

    output_modification: [
        _target_: dmb.model.dmb_model.Exponential
    ]

  optimizer:
    lr: 0.001

  scheduler:
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    mode: min
    factor: 0.5
    patience: 200
    min_lr: 1e-5
    verbose: False
    cooldown: 100
    threshold: 0.1

  loss:
    _target_: dmb.model.utils.MSLELoss
    reduction: "mean"