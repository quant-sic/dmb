name: "Setup Python Environment"
description: "Setup Python and install dependencies"

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v4

    - name: Setup Cache
      id: setup-cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/.venv/**/*
          ${{ github.workspace }}/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('requirements/**/*.lock', 'pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Setup uv and task
      id: setup-tools
      run: |
        sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b "${{ github.workspace }}/.local/bin"
        echo "/home/runner/work/dmb/dmb/.local/bin" >> $GITHUB_PATH

        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv_path=$(which uv)
        echo "uv-path=$uv_path" >> $GITHUB_OUTPUT
        uv_cache_dir=$(uv cache dir)
        echo "uv-cache-dir=$uv_cache_dir" >> $GITHUB_OUTPUT
        echo "venv-dir=${{ github.workspace }}/.venv" >> $GITHUB_OUTPUT

      shell: bash

    - name: Set up Python
      run: uv python install
      shell: bash

    - name: Install dependencies
      if: steps.setup-cache.outputs.cache-hit != 'true'
      run: task install-dependencies
      shell: bash

    - name: Activate virtual environment
      shell: bash
      run: |
        echo "${{ steps.setup-tools.outputs.venv-dir }}/bin" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=${{ steps.setup-tools.outputs.venv-dir }}" >> $GITHUB_ENV
        echo "UV_PROJECT_ENVIRONMENT=${{ steps.setup-tools.outputs.venv-dir }}" >> $GITHUB_ENV
        echo "UV_CACHE_DIR=${{ github.workspace }}/.cache/uv" >> $GITHUB_ENV

    - name: Create .cache directory
      run: mkdir -p ${{ github.workspace }}/.cache
      shell: bash

    - name: Minimize uv cache
      run: uv cache prune --ci
      shell: bash
